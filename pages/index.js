import Head from "next/head";
import { useEffect, useRef, useState } from "react";
import * as tf from "@tensorflow/tfjs";
import * as cocossd from "@tensorflow-models/coco-ssd";
import Webcam from "react-webcam";
import styles from "../styles/Home.module.css";
// import { drawRect } from "../utils/drawRect";
import { simpleDrawRect } from "../utils/simpleDrawRect";

export default function Home() {
  const [streamResult, setStreamResult] = useState(null);
  const webcamRef = useRef(null);
  const canvasRef = useRef(null);

  // let video, videoWidth, videoHeight;
  const detect = async (net) => {
    // Check data is available
    if (
      typeof webcamRef.current !== "undefined" &&
      webcamRef.current !== null &&
      webcamRef.current.video.readyState === 4
    ) {
      // Get Video Properties
      const video = webcamRef.current.video;
      const videoWidth = webcamRef.current.video.videoWidth;
      const videoHeight = webcamRef.current.video.videoHeight;
      console.log(video);
      // Set video width
      webcamRef.current.video.width = videoWidth;
      webcamRef.current.video.height = videoHeight;

      // Set canvas height and width
      canvasRef.current.width = videoWidth;
      canvasRef.current.height = videoHeight;

      // 4. TODO - Make Detections
      const obj = await net.detect(video);
      console.log(obj);

      // Draw mesh
      const ctx = canvasRef.current.getContext("2d");

      // 5. TODO - Update drawing utility
      simpleDrawRect(obj, ctx);
    }
  };

  const runModel = async () => {
    // const net = await cocossd.load();
    const net = await tf.loadLayersModel('file://model_tfjs/model.json').then(r=>r).catch(e=>e)
    setInterval(() => {
      detect(net);
    }, 20);
  };

  // const socket = io("http://127.0.0.1:3600/web");
  // socket.emit("greeting", "halo")

  useEffect(() => {
    runModel();
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.main}>
        <h1 className={styles.title}>Welcome to</h1>
        <p style={{ fontSize: 30, color: "blue" }}>Face Detection!</p>
      </div>
      {/* <video autoPlay ref={videoRef} /> */}
      <Webcam
        ref={webcamRef}
        muted={true}
        style={{
          position: "absolute",
          marginLeft: "auto",
          marginRight: "auto",
          left: 0,
          right: 0,
          textAlign: "center",
          zindex: 9,
          width: 640,
          height: 480,
        }}
      />
      <canvas
        ref={canvasRef}
        style={{
          position: "absolute",
          marginLeft: "auto",
          marginRight: "auto",
          left: 0,
          right: 0,
          textAlign: "center",
          zindex: 8,
          width: 640,
          height: 480,
        }}
      />
      <button onClick={() => runModel()}>Start record</button>
    </div>
  );
}
